; ----------------------------------------------------------------------------
zp_bas_JmpWarm                    :=  $0000
zp_bas_MsgPrint                   :=  $0003
zp_bas_usrInVar                   :=  $0006
zp_bas_usrOutVar                  :=  $0008
zp_bas_usrJump                    :=  $000A
zp_bas_usrJumpAddr                :=  $000B
zp_bas_nullCount                  :=  $000D
zp_bas_lineBuffCnt                :=  $000E
zp_bas_termWidth                  :=  $000F
zp_bas_inpColLim                  :=  $0010
zp_bas_integerAddr                :=  $0011
zp_bas_lineBuffer                 :=  $0013     ; 72 Bytes of line buffer
zp_bas_dec2bin                    :=  $005B
zp_bas_scanQuoteFlag              :=  $005C
zp_bas_lineBuffPtr                :=  $005D
zp_bas_dimFlag                    :=  $005E
zp_bas_dataType                   :=  $005F
zp_bas_dataScan                   :=  $0060
zp_bas_subScrFlag                 :=  $0061
zp_bas_inpOrRead                  :=  $0062
zp_bas_evalFlag                   :=  $0063
zp_bas_Ctrl_O                     :=  $0064
zp_bas_tmpStr_1                   :=  $0065
zp_bas_tmpStr_2                   :=  $0068
zp_bas_tmpStr_3                   :=  $006B
zp_bas_tmpStr_4                   :=  $006E
zp_bas_tmpPtr_1                   :=  $0071
zp_bas_tmpPtr_2                   :=  $0073
zp_bas_mulStge_1                  :=  $0075
zp_bas_srcStart                   :=  $0079
zp_bas_snglVars                   :=  $007B
zp_bas_arryVars                   :=  $007D
zp_bas_emptyRAM                   :=  $007F
zp_bas_strings                    :=  $0081
zp_bas_tmpStr                     :=  $0083
zp_bas_memTop                     :=  $0085
zp_bas_currLineNum                :=  $0087
zp_bas_pgmScanPtr                 :=  $008B
zp_bas_curDataStmt                :=  $008D
zp_bas_nxtDataStmt                :=  $008F
zp_bas_find_var_AD0B              :=  $0095
zp_bas_outVarAddr                 :=  $0097
zp_bas_jmp                        :=  $00A1
zp_bas_jmp_addr                   :=  $00A2
zp_bas_nextListLn                 :=  $00AA
zp_bas_prt_num_B962               :=  $00AD
zp_bas_getNxtC                    :=  $00BC
zp_bas_getC                       :=  $00C2
zp_bas_getC_Addr_L                :=  $00C3
zp_bas_getC_Addr_H                :=  $00C4
zp_bas_getC_Exit                  :=  $00D3
zp_bas_randSeed1                  :=  $00D4
zp_bas_randSeed2                  :=  $00D6
zp_freeRAM                        :=  $00D8     ; cc65 Use?     (30 free bytes?)
;
zp_irq_vec                        :=  $00F7     ; IRQ Vector    (2 Bytes )
zp_nmi_vec                        :=  $00F9     ; NMI Vector    (2 Bytes )
;
zp_monLoadFlag                    :=  $00FB
zp_monLoadByte                    :=  $00FC
zp_monLoadTmp                     :=  $00FD
zp_monLoadAddrLo                  :=  $00FE
zp_monLoadAddrHi                  :=  $00FF
;
stack                             :=  $0100     ; Stack init $28 by default (OSI roms use stack for IRQ & NMI)
;
wa_cursorAtAddr                   :=  $0200
wa_printChar                      :=  $0201
wa_tempChar1                      :=  $0202
wa_loadFlag                       :=  $0203
wa_tempChar2                      :=  $0204
wa_saveFlag                       :=  $0205
wa_repeatRate                     :=  $0206
wa_scrollRtn                      :=  $0207
wa_unused1                        :=  $020F     ; 2 free bytes?
wa_ctrl_C_flag                    :=  $0212
wa_kbdTMP1                        :=  $0213
wa_kbdTMP2                        :=  $0214
wa_kbdTMP3                        :=  $0215
wa_kbdTMP4                        :=  $0216
wa_unused2                        :=  $0217     ; 1 Byte Free?
wa_inputVec                       :=  $0218
wa_outputVec                      :=  $021A
wa_ctrlCVec                       :=  $021C
wa_loadVec                        :=  $021E
wa_saveVec                        :=  $0220
wa_Free                           :=  $0222     ; People use this for small routines?  (222 bytes)
;
basicPGM                          :=  $0300     ; Basic programs Start here
;
;
;
basicROM_cmdJumpTable             :=  $A000
basicROM_keywordTable             :=  $A084
basicROM_errorMsgTable            :=  $A164
basicROM_msgOutRtn                :=  $A24E
basicROM_Input_str                :=  $A357
basicROM_Init                     :=  $A477
basicROM_Run                      :=  $A5C2
basicROM_CTRL_C                   :=  $A629
basicROM_STOP                     :=  $A638
basicROM_Print_Str                :=  $A8C3
basicROM_compl_16                 :=  $ABD8
basicROM_InVar                    :=  $AE05
basicROM_OutVar                   :=  $AFC1
basicROM_Print_Num                :=  $B962
basicROM_coldStart                :=  $BD11
basicROM_crtRtn                   :=  $BF2D
floppy_piaDRA                     :=  $C000                                                       ; The floppy PIA Data-A port (Input)
floppy_piaCRA                     :=  $C001                                                       ; The floppy PIA Control-A port
floppy_piaDRB                     :=  $C002                                                       ; The floppy PIA Data-B port (Output)
floppy_piaCRB                     :=  $C003                                                       ; The floppy PIA Control-B port
floppy_aciaStatus                 :=  $C010                                                      ; The floppy ACIA Status port
floppy_aciaData                   :=  $C011                                                       ; The floppy ACIA Data port
displayRAM                        :=  $D000
kbdPort                           :=  $DF00                                                       ; The keyboad port lives here
aciaStatus                        :=  $F000                                                       ; The TAPE ACIA Status port
aciaData                          :=  $F001                                                       ; The TAPE ACIA Data port
